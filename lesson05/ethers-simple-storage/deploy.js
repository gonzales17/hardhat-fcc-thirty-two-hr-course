const ethers = require("ethers");
const fs = require("fs-extra");
require("dotenv").config();
const prompt = require("prompt-sync")();

var contract = null;

/**
 * Recovers a wallet encrypted in ./.encryptedKey.json to deploy SimpleStorage.sol
 * to the network pointed to by RPC_URL in .env
 */
async function main() {
    const encryptedJson = fs.readFileSync("./.encryptedKey.json", "utf-8");
    let wallet = new ethers.Wallet.fromEncryptedJsonSync(
        encryptedJson,
        prompt.hide("Encrypted Key JSON password: ")
    );
    const provider = new ethers.providers.JsonRpcProvider(process.env.RPC_URL);
    wallet = await wallet.connect(provider);
    const abi = fs.readFileSync(
        "./SimpleStorage_sol_SimpleStorage.abi",
        "utf-8"
    );
    const binary = fs.readFileSync(
        "./SimpleStorage_sol_SimpleStorage.bin",
        "utf-8"
    );

    const contractFactory = new ethers.ContractFactory(abi, binary, wallet);
    console.log("Deploying...");
    contract = await contractFactory.deploy();
    const deploymentReceipt = await contract.deployTransaction.wait(1);
    console.log("Deployment txn:");
    console.log(contract.deployTransaction);
    console.log("Deployment receipt:");
    console.log(deploymentReceipt);

    /*
  const tx = {
    nonce: await wallet.getTransactionCount(),
    gasPrice: 2000, //200000000,
    gasLimit: 5000000,
    to: null,
    value: 0,
    data: "0x608060405260405180604001604052806040518060400160405280600681526020017f47656f726765000000000000000000000000000000000000000000000000000081525081526020016002815250600160008201518160000190805190602001906200006f92919062000090565b506020820151816001015550503480156200008957600080fd5b50620001a5565b8280546200009e9062000140565b90600052602060002090601f016020900481019282620000c257600085556200010e565b82601f10620000dd57805160ff19168380011785556200010e565b828001600101855582156200010e579182015b828111156200010d578251825591602001919060010190620000f0565b5b5090506200011d919062000121565b5090565b5b808211156200013c57600081600090555060010162000122565b5090565b600060028204905060018216806200015957607f821691505b6020821081141562000170576200016f62000176565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b61111780620001b56000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80638bab8dd5116100715780638bab8dd51461016a5780639a4226a41461019a5780639e7a13ad146101b6578063a6b19a4d146101e7578063b45a7fd014610218578063e105523014610236576100b4565b80633d1438cb146100b95780633ebe2e6a146100d7578063471f7cdf146100f55780636057361d1461011357806377ec2b551461012f578063794239e41461014e575b600080fd5b6100c1610252565b6040516100ce9190610a57565b60405180910390f35b6100df610260565b6040516100ec9190610ac2565b60405180910390f35b6100fd61026a565b60405161010a9190610ac2565b60405180910390f35b61012d600480360381019061012891906108ce565b610270565b005b61013761027a565b604051610145929190610a72565b60405180910390f35b61016860048036038101906101639190610885565b610314565b005b610184600480360381019061017f91906107f3565b610397565b6040516101919190610ac2565b60405180910390f35b6101b460048036038101906101af919061083c565b6103c5565b005b6101d060048036038101906101cb91906108ce565b610439565b6040516101de929190610a72565b60405180910390f35b61020160048036038101906101fc91906108ce565b6104f5565b60405161020f929190610a72565b60405180910390f35b6102206105a7565b60405161022d9190610a57565b60405180910390f35b610250600480360381019061024b91906108fb565b6105b6565b005b600060208060ff1614905090565b6000600b54905090565b600b5481565b80600b8190555050565b600180600001805461028b90610dd6565b80601f01602080910402602001604051908101604052809291908181526020018280546102b790610dd6565b80156103045780601f106102d957610100808354040283529160200191610304565b820191906000526020600020905b8154815290600101906020018083116102e757829003601f168201915b5050505050908060010154905082565b6003819080600181540180825580915050600190039060005260206000209060020201600090919091909150600082015181600001908051906020019061035c929190610640565b506020820151816001015550508060200151600a82600001516040516103829190610a40565b90815260200160405180910390208190555050565b600a818051602081018201805184825260208301602085012081835280955050505050506000915090505481565b600381908060018154018082558091505060019003906000526020600020906002020160009091909190915081816103fd919061106f565b50508060200135600a8280600001906104169190610add565b604051610424929190610a27565b90815260200160405180910390208190555050565b6003818154811061044957600080fd5b906000526020600020906002020160009150905080600001805461046c90610dd6565b80601f016020809104026020016040519081016040528092919081815260200182805461049890610dd6565b80156104e55780601f106104ba576101008083540402835291602001916104e5565b820191906000526020600020905b8154815290600101906020018083116104c857829003601f168201915b5050505050908060010154905082565b6004816003811061050557600080fd5b6002020160009150905080600001805461051e90610dd6565b80601f016020809104026020016040519081016040528092919081815260200182805461054a90610dd6565b80156105975780601f1061056c57610100808354040283529160200191610597565b820191906000526020600020905b81548152906001019060200180831161057a57829003601f168201915b5050505050908060010154905082565b60006008602060ff1614905090565b600382106105f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f090610aa2565b60405180910390fd5b806004836003811061060e5761060d610ea2565b5b60020201600082015181600001908051906020019061062e929190610640565b50602082015181600101559050505050565b82805461064c90610dd6565b90600052602060002090601f01602090048101928261066e57600085556106b5565b82601f1061068757805160ff19168380011785556106b5565b828001600101855582156106b5579182015b828111156106b4578251825591602001919060010190610699565b5b5090506106c291906106c6565b5090565b5b808211156106df5760008160009055506001016106c7565b5090565b60006106f66106f184610b65565b610b40565b90508281526020810184848401111561071257610711610f43565b5b61071d848285610d3e565b509392505050565b600082601f83011261073a57610739610f20565b5b813561074a8482602086016106e3565b91505092915050565b60006040828403121561076957610768610f2a565b5b81905092915050565b60006040828403121561078857610787610f2f565b5b6107926040610b40565b9050600082013567ffffffffffffffff8111156107b2576107b1610f39565b5b6107be84828501610725565b60008301525060206107d2848285016107de565b60208301525092915050565b6000813590506107ed816110c5565b92915050565b60006020828403121561080957610808610f4d565b5b600082013567ffffffffffffffff81111561082757610826610f48565b5b61083384828501610725565b91505092915050565b60006020828403121561085257610851610f4d565b5b600082013567ffffffffffffffff8111156108705761086f610f48565b5b61087c84828501610753565b91505092915050565b60006020828403121561089b5761089a610f4d565b5b600082013567ffffffffffffffff8111156108b9576108b8610f48565b5b6108c584828501610772565b91505092915050565b6000602082840312156108e4576108e3610f4d565b5b60006108f2848285016107de565b91505092915050565b6000806040838503121561091257610911610f4d565b5b6000610920858286016107de565b925050602083013567ffffffffffffffff81111561094157610940610f48565b5b61094d85828601610772565b9150509250929050565b61096081610c23565b82525050565b60006109728385610bd2565b935061097f838584610d3e565b82840190509392505050565b600061099682610bb6565b6109a08185610bc1565b93506109b0818560208601610d4d565b6109b981610f52565b840191505092915050565b60006109cf82610bb6565b6109d98185610bd2565b93506109e9818560208601610d4d565b80840191505092915050565b6000610a02601983610bc1565b9150610a0d82610fa2565b602082019050919050565b610a2181610c2f565b82525050565b6000610a34828486610966565b91508190509392505050565b6000610a4c82846109c4565b915081905092915050565b6000602082019050610a6c6000830184610957565b92915050565b60006040820190508181036000830152610a8c818561098b565b9050610a9b6020830184610a18565b9392505050565b60006020820190508181036000830152610abb816109f5565b9050919050565b6000602082019050610ad76000830184610a18565b92915050565b60008083356001602003843603038112610afa57610af9610f34565b5b80840192508235915067ffffffffffffffff821115610b1c57610b1b610f25565b5b602083019250600182023603831315610b3857610b37610f3e565b5b509250929050565b6000610b4a610b5b565b9050610b568282610e24565b919050565b6000604051905090565b600067ffffffffffffffff821115610b8057610b7f610ed1565b5b610b8982610f52565b9050602081019050919050565b60008190508160005260206000209050919050565b600082905092915050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b601f821115610c1e57610bef81610b96565b610bf884610dc6565b81016020851015610c07578190505b610c1b610c1385610dc6565b830182610c39565b50505b505050565b60008115159050919050565b6000819050919050565b5b81811015610c5857610c4d600082610f8a565b600181019050610c3a565b5050565b6000610c6782610c2f565b9050919050565b610c788383610bab565b67ffffffffffffffff811115610c9157610c90610ed1565b5b610c9b8254610dd6565b610ca6828285610bdd565b6000601f831160018114610cd55760008415610cc3578287013590505b610ccd8582610e08565b865550610d35565b601f198416610ce386610b96565b60005b82811015610d0b57848901358255600182019150602085019450602081019050610ce6565b86831015610d285784890135610d24601f891682610e55565b8355505b6001600288020188555050505b50505050505050565b82818337600083830152505050565b60005b83811015610d6b578082015181840152602081019050610d50565b83811115610d7a576000848401525b50505050565b6000810160008301610d928185610add565b610d9d81838661105f565b50505050600181016020830180610db381610f0a565b9050610dbf818461107d565b5050505050565b60006020601f8301049050919050565b60006002820490506001821680610dee57607f821691505b60208210811415610e0257610e01610e73565b5b50919050565b6000610e148383610e55565b9150826002028217905092915050565b610e2d82610f52565b810181811067ffffffffffffffff82111715610e4c57610e4b610ed1565b5b80604052505050565b6000610e6660001984600802610f7d565b1980831691505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000819050919050565b60008135610f17816110c5565b80915050919050565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b60008160001b9050919050565b600082821b905092915050565b600082821c905092915050565b610f926110dc565b610f9d8184846110a0565b505050565b7f496e646578206d757374206265206c657373207468616e203300000000000000600082015250565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610ff784610f63565b9350801983169250808416831791505092915050565b60006008830261103d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610f70565b6110478683610f70565b95508019841693508086168417925050509392505050565b61106a838383610c6e565b505050565b6110798282610d80565b5050565b61108682610c5c565b61109961109282610f00565b8354610fcb565b8255505050565b6110a983610c5c565b6110bd6110b582610f00565b84845461100d565b825550505050565b6110ce81610c2f565b81146110d957600080fd5b50565b60009056fea264697066735822122006a20cbaabb397e3b9bcd2d0576da48831bbf6aa5033e4234847946bb2ce8b7864736f6c63430008070033",
    chainId: 1337,
  };
  const sentTxResponse = await wallet.sendTransaction(tx);
  await sentTxResponse.wait(1);
  console.log(sentTxResponse);
  */
    let result = await contract.store("7777777777777777");
    await result.wait(1);
    result = await contract.retrieve_fave_number();
    console.log("Number is " + result);
}

main()
    .then(() => process.exit(0))
    .catch((error) => {
        console.error(error);
        process.exit(1);
    });
